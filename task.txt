/* vim: set fileencoding=cp1251 : */
Даже если Вы никогда не занимались проблемами, связанными с заданием, Ваша работа будет нам очень интересна и поможет составить мнение о Вас. 
Пожалуйста, оцените, сколько Вам понадобится на него времени и укажите в ответном письме сегодня.

Тестовое задание заключается в создании приложения, визуализирующего движение трактора по плоскости, используя два источника данных (симулированные и из файла).

Требуемая функциональность:

1)      симулятор движения трактора по плоскости, далее по тексту – Simulator (описание ниже);
2)      модуль чтения записи реальных данных (представляет их в том же виде, что и симулятор), далее по тексту – Reader (описание ниже);
3)      окно с визуальным отображением движения трактора на плоскости по данным Simulator’a или Reader’а и позволяет менять параметры отображения и Simulator’а, далее по тексту – UI (описание ниже);
4)      дополнительное окно с текстовым отображением текущих параметров, далее по тексту – Info (описание ниже);
5)      общая функциональность, не зависящая от целевой платформы, должна быть выделена, и те же исходники должны одновременно использоваться для сборки под разные ОС;
6)      желательно, чтобы Simulator и Reader реализовывали общий интерфейс (функции остановить или продолжить), а UI и Info сохраняли интерфейс для Windows и Linux реализаций;
7)      для матричных/векторных операция желательно использовать прилагаемую векторную библиотеку (SMat.cc/SMat.h);
8)      Simulator, Reader, UI и Info должны быть реализованы в разных потоках.

 Приложение должно собираться, как под Windows, так и под Linux без использования дополнительных библиотек и систем сборки (QT, CMake, Cygwin и пр. ), а файлы проектов адаптированы:

a.       для Windows – vcproj/sln под Visual C++ (2008)
b.      для Linux – Makefile под gcc (4.4.5)

Дополнительно, по желанию, можно реализовать сборку и под Android 5.x (Java, API level 21-22, NDK для SMat)

 Simulator:

Реализует симуляцию движения трактора на плоскости на основе простой кинематической велосипедной модели из приложенной статьи «Automatic Steering Methods for Autonomous.

Automobile Path Tracking »/пп 3.1, например, пошагово с виртуальным шагом времени 0.005 сек. Результат симуляции (время, положение и ориентация трактора) постоянно выкладывается общий для всех потоков буфер.

Предоставляет возможность изменить параметры симуляции (скорость движения, угол отклонения переднего колеса).

Предоставляет возможность запустить или остановить симуляцию.

 

Reader:

Реализует чтение записи реальных данных движения трактора из файла (пример прилагается), конвертирует данные в тот же формат, что и Simulator и, постоянно выкладывает в общий для всех потоков в буфер.

Предоставляет возможность запустить или остановить чтение.

 

Формат приложенного файла sample.dat:

224472400 +2829169.83 +2208058.32 +5255180.65 +00.00 +0.00 +167.45 +0.00 -00.52 -00.15 +177.60 +02.39 0

Время в мс, X, Y, Z, *,*,*,  скорость (м/сек), *, *, азимут, *, *

Где * - можно игнорировать

X,Y,Z – координаты трактора в ECEF, их нужно преобразовать в NED (тут написано как http://en.wikipedia.org/wiki/Geodetic_system, пример -  http://www.oc.nps.edu/oc2902w/coord/llhxyz.htm, в качестве локальной точки можно взять первую)

 

UI:

Читает данные (положение и ориентация трактора)  из общего буфера. Параметр Source определяет какие данные брать: от Simulator или от  Reader.
Отображает графически положение и ориентацию трактора (2D), считывает от пользователя команды (при необходимости передает их в Simulator или  Reader):

- увеличить/уменьшить скорость и угол отклонения переднего колеса для симуляции (пределы: скорость +/- 10 м/с , угол +/- 30 градусов),
- остановить или продолжить симуляцию/чтение,
- переключить режим отображения (параметр Source) от Simulator или  Reader.

 

Info:

Читает данные (время, положение и ориентация трактора, скорость и угол отклонения переднего колеса) , параметр Source из общего буфера и отображает их в собственном окне.
